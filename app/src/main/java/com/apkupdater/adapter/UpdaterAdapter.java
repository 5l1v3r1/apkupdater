package com.apkupdater.adapter;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.view.ViewGroup;

import com.apkupdater.model.Update;
import com.apkupdater.util.AnimationUtil;
import com.apkupdater.view.UpdaterView;
import com.apkupdater.view.UpdaterView_;

import java.util.Collections;
import java.util.Comparator;
import java.util.List;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

public class UpdaterAdapter
	extends RecyclerView.Adapter<UpdaterAdapter.UpdateViewHolder>
{
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	private List<Update> mUpdates;
	private Context mContext;
	private RecyclerView mView;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public class UpdateViewHolder
		extends RecyclerView.ViewHolder
	{
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		private UpdaterView mView;

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		UpdateViewHolder(
			UpdaterView view
		) {
			super(view);
			mView = view;
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		public void bind(
			Update app
		) {
			mView.bind(app);
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public UpdaterAdapter(
		Context context,
		RecyclerView view,
		List<Update> apps
	) {
		mContext = context;
		mView = view;

		mUpdates = apps;
		sort();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	@Override
	public UpdateViewHolder onCreateViewHolder(
		ViewGroup parent,
		int viewType
	) {
		UpdaterView v = UpdaterView_.build(parent.getContext());
		v.setLayoutParams(new RecyclerView.LayoutParams(
			ViewGroup.LayoutParams.MATCH_PARENT,
			ViewGroup.LayoutParams.WRAP_CONTENT
		));

		v.setActionOneButtonListener(onActionOneClick);
		v.setActionTwoButtonListener(onActionTwoClick);
		return new UpdateViewHolder(v);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	private UpdaterView getUpdaterViewParent(
		View v
	) {
		while (v != null) {
			v = (View) v.getParent();
			if (v instanceof UpdaterView) {
				return (UpdaterView) v;
			}
		}
		return null;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	private View.OnClickListener onActionTwoClick = new View.OnClickListener() {
		@Override
		public void onClick(View v) {
			Update update = mUpdates.get(mView.getChildLayoutPosition(getUpdaterViewParent(v)));
			Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(
				"https://apps.evozi.com/apk-downloader/?id=" + update.getPname()
			));
			mContext.startActivity(browserIntent);
		}
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	private View.OnClickListener onActionOneClick = new View.OnClickListener() {
		@Override
		public void onClick(View v) {
			Update update = mUpdates.get(mView.getChildLayoutPosition(getUpdaterViewParent(v)));
			Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(update.getUrl()));
			mContext.startActivity(browserIntent);
		}
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	@Override
	public void onBindViewHolder(
		UpdateViewHolder holder,
		int position
	) {
		holder.bind(mUpdates.get(position));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	@Override
	public int getItemCount(
	) {
		return mUpdates.size();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public void addUpdate(
		Update update
	) {
		AnimationUtil.startListAnimation(mView);
		mUpdates.add(update);
		sort();
		notifyDataSetChanged();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public void setUpdates(
		List<Update> updates
	) {
		AnimationUtil.startListAnimation(mView);
		mUpdates.clear();
		mUpdates.addAll(updates);
		sort();
		notifyDataSetChanged();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public int getCount(
	) {
		return mUpdates.size();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	private void sort(
	) {
		Collections.sort(mUpdates, new Comparator<Update>() {
			@Override
			public int compare(Update u1, Update u2) {
				return u1.getName().compareToIgnoreCase(u2.getName());
			}
		});
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////